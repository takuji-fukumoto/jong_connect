CREATE TABLE IF NOT EXISTS "public"."seasons" (
    "id" bigint NOT NULL,
    "group_id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL CHECK (char_length(name) <= 20),
    "description" "text" DEFAULT ''::"text" NOT NULL CHECK (char_length(name) <= 50)
);

ALTER TABLE "public"."seasons" OWNER TO "postgres";

ALTER TABLE "public"."seasons" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY;

ALTER TABLE ONLY "public"."seasons"
    ADD CONSTRAINT "seasons_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."seasons"
    ADD CONSTRAINT "seasons_group_id_fkey"
    FOREIGN KEY ("group_id") REFERENCES "public"."groups"("id") ON DELETE CASCADE;

GRANT ALL ON TABLE "public"."seasons" TO "authenticated";
GRANT ALL ON TABLE "public"."seasons" TO "service_role";

alter table "public"."seasons" enable row level security;

create policy "user can view seasons that they have joined"
  on public.seasons for select using (is_joinned_group(group_id));

create policy "Users can update seasons that they have joined"
  on public.seasons for update using (is_joinned_group(group_id));

create policy "Users can delete seasons that they have joined"
  on public.seasons for delete using (is_joinned_group(group_id));

create policy "Group joinner can create seasons"
  on public.seasons for insert with check (is_joinned_group(group_id));

ALTER TABLE "public"."group_matches" ADD COLUMN "season_id" bigint NULL;

ALTER TABLE ONLY "public"."group_matches"
    ADD CONSTRAINT "group_matches_season_id_fkey" FOREIGN KEY ("season_id") REFERENCES "public"."seasons"("id") ON DELETE SET NULL;
